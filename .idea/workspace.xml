<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="18e78520-0b4a-46ff-8a25-2d6cdf0de85a" name="Changes" comment="creat initial Dockerfile and .dockerignore&#10;&#10;todo:&#10;- update readme to include Docker installation instructions&#10;- set up cron to schedule Docker container to run daily">
      <change beforePath="$PROJECT_DIR$/.dockerignore" beforeDir="false" afterPath="$PROJECT_DIR$/.dockerignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/KindleCourier.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/KindleCourier.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/requirements.txt" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/mail_sender.py" beforeDir="false" afterPath="$PROJECT_DIR$/utils/mail_sender.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;cja-smith&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/cja-smith/KindleCourier.git&quot;,
    &quot;accountId&quot;: &quot;7bf752e1-3cd5-498b-86e1-fcd3de31f8c9&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2stsppPFG1A2v676EOzLXufXbCb" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Python.main.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;dockerised&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/charles/Documents/PythonProjects/KindleCourier&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File&quot;: [
      &quot;TEXT&quot;
    ]
  }
}</component>
  <component name="RunManager">
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="KindleCourier" />
      <option name="ENV_FILES" value="" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-python-sdk-fb887030ada0-aa17d162503b-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-243.21565.199" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="18e78520-0b4a-46ff-8a25-2d6cdf0de85a" name="Changes" comment="" />
      <created>1739286390465</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1739286390465</updated>
    </task>
    <task id="LOCAL-00001" summary="feat: implement ebook_generator.py into main&#10;&#10;- create EBookGenerator class to generate .epubs from Article objects&#10;- implement add_article function, takes Article instance and adds to EpubBook instance&#10;- generate_toc creates basic Table of Contents (but doesn't appear to actually create ToC at start of ebook for some reason)&#10;- generate_ebook implements generate_toc, creates a spine for ebook, and outputs to attachments folder&#10;&#10;todo:&#10;- fix toc not appearing in outputted file">
      <option name="closed" value="true" />
      <created>1739911500918</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1739911500918</updated>
    </task>
    <task id="LOCAL-00002" summary="Update README.md">
      <option name="closed" value="true" />
      <created>1739911921693</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1739911921693</updated>
    </task>
    <task id="LOCAL-00003" summary="fix: &#10;- toc generation now correctly uses epub.Link object&#10;- spine creation logic includes only articles&#10;&#10;- update README.md&#10;&#10;todo:&#10;- make epub output look prettier">
      <option name="closed" value="true" />
      <created>1740051772457</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1740051772457</updated>
    </task>
    <task id="LOCAL-00004" summary="creat initial Dockerfile and .dockerignore&#10;&#10;todo:&#10;- update readme to include Docker installation instructions&#10;- set up cron to schedule Docker container to run daily">
      <option name="closed" value="true" />
      <created>1740070331127</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1740070331127</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="feat: implement EPUB generation with TOC and spine&#10;&#10;- Added 'EBookGenerator' class to create EPUBs from 'Article' objects&#10;- Implemented 'add_article' to add chapters with headlines and content&#10;- Added generate_toc to create a table of contents&#10;- Added generate_ebook to finalize EPUB with spine and navigation" />
    <MESSAGE value="Update README.md&#10;Add time.sleep(1) to main.py to avoid API limits&#10;Removed (now revoked) private API key (oops)" />
    <MESSAGE value="I" />
    <MESSAGE value="feat: implement ebook_generator.py into main&#10;&#10;- create EBookGenerator class to generate .epubs from Article objects&#10;- implement add_article function, takes Article instance and adds to EpubBook instance&#10;- generate_toc creates basic Table of Contents (but doesn't appear to actually create ToC at start of ebook for some reason)&#10;- generate_ebook implements generate_toc, creates a spine for ebook, and outputs to attachments folder&#10;&#10;todo:&#10;- fix toc not appearing in outputted file" />
    <MESSAGE value="Update README.md" />
    <MESSAGE value="fix: &#10;- toc generation now correctly uses epub.Link object&#10;- spine creation logic includes only articles&#10;&#10;- update README.md&#10;&#10;todo:&#10;- make epub output look prettier" />
    <MESSAGE value="creat initial Dockerfile and .dockerignore&#10;&#10;todo:&#10;- update readme to include Docker installation instructions&#10;- set up cron to schedule Docker container to run daily" />
    <option name="LAST_COMMIT_MESSAGE" value="creat initial Dockerfile and .dockerignore&#10;&#10;todo:&#10;- update readme to include Docker installation instructions&#10;- set up cron to schedule Docker container to run daily" />
  </component>
</project>